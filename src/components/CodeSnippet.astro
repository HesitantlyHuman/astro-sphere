---
// TODO: Fix the fact that the code we are provided by shiki is missing all
// the necessary whitespace formatting which it is displayed with.

const { $id } = Astro.locals;

const meta: Record<string, string> = {};
const {
  "data-meta": meta_string,
  "data-code": code_encoded,
  ...props
} = Astro.props;

if (meta_string) {
  const regex = /(\w+)=("[^"]*"|\S+)/g;
  let match;
  while ((match = regex.exec(meta_string)) !== null) {
    const key = match[1];
    let value = match[2];

    // Remove surrounding quotes if present
    if (value.startsWith('"') && value.endsWith('"')) {
      value = value.slice(1, -1);
    }

    meta[key] = value;
  }
}

const file_name = meta.file;
const caption = meta.caption;
const link = meta.link;
const lines_start = meta.lines_start;

console.log(lines_start);

const copy_button_id = $id("copy-button");

// Somewhere along the line, the properties are getting encoded in a way which
// does not preserve whitespace. See astro.config.mjs
const code_text = JSON.parse(code_encoded);
---

<figure
  class="m-0 border rounded-lg border-black/15 dark:border-white/20 overflow-hidden"
>
  {
    caption && (
      <figcaption class="flex justify-between items-center p-2 px-4 m-0 border-b border-black/15 dark:border-white/20 leading-normal bg-black/5 dark:bg-white/15">
        <p class="m-0">{caption}</p>
      </figcaption>
    )
  }
  <pre
    {...props}><div class="toolbar"><button class="copy-button fill-current" id={copy_button_id}><svg class="copy-svg copy-svg-active fill-black/75 dark:fill-white/75 hover:fill-black hover:dark:fill-white"><use href="/ui.svg#copy-filled" /></svg><svg class="copy-svg copy-svg-inactive fill-black/75 dark:fill-white/75 hover:fill-black hover:dark:fill-white"><use href="/ui.svg#copy-open" /></svg></button></div><slot /></pre>
</figure>

<style>
  .toolbar {
    position: sticky;
    top: 0;
    left: 100%;
    height: 0;
    width: 0;
    pointer-events: none;
  }

  .copy-button {
    position: absolute;
    top: 0;
    right: 0;
    width: 20px;
    pointer-events: auto;
  }

  .copy-button,
  .active .copy-svg-inactive {
    display: none;
  }

  .copy-button,
  .active .copy-svg-active {
    display: block;
  }

  .copy-svg {
    position: absolute;
    top: 0;
    right: 0;
    @apply w-full aspect-square;
  }

  .copy-svg-active {
    display: none;
  }

  .astro-code {
    border-radius: 0;
  }
</style>

<script define:vars={{ copy_button_id, code_text }}>
  const button = document.getElementById(copy_button_id);

  let is_active = false;

  button.addEventListener("mousedown", () => {
    button.classList.add("active");
    is_active = true;
  });
  button.addEventListener("mouseleave", () => {
    button.classList.remove("active");
    is_active = false;
  });
  button.addEventListener("mouseup", () => {
    if (is_active) {
      navigator.clipboard.writeText(code_text);
    }

    button.classList.remove("active");
    is_active = false;
  });
</script>
